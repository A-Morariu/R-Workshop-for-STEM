infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_bar(colour = 'red', fill = 'red', alpha = 0.3)+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
tep
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red', fill = 'red', alpha = 0.3)+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light() +
xlim(40,80)
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light() +
ylim(1000,100000)
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light() +coord_cartesian(ylim = c(1,10000))
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light() +coord_cartesian(ylim = c(1,1000))
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light() +coord_cartesian(ylim = c(1,100))
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light() +coord_cartesian(ylim = c(1000,1000000))
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "Global Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light() +coord_cartesian(ylim = c(1000,100000))
View(infected_data_tidy)
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "US Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
x0 <- 42
class(x0)
# can store multiple values in the same memory slot
v0 <- c(41, x0, 43)
v0
# acccessing specific parts of the vector
v0[2]
v0[1:3]
# can store multiple vectors
df0 <- data.frame(v0, 2*v0, v0/2)
df0
# add and substract
x0 + x0
x0-3
# mult + div
x0*4
x0/4
v0*4
# mult with dataframes
2*df0
# define a 3x3 matrix
mt0 <- as.matrix(df0)
mt0
t(mt0)
x0^2
# vector multiplication
v0 * v0 # element wise
v0 %*% v0 # dot product
v0 %*% t(v0) # vector product
mt0 %*% mt0 # matrix product
sum(1,2,3)
sum(v0)
my_sum <- function(vector){
# sum the first and last entry of a vector
x <- vector[1] + vector[length(vector)]
return(x)
}
my_sum(v0)
my_sum(c())
x0 <- 42
class(x0)
# can store multiple values in the same memory slot
v0 <- c(41, x0, 43)
v0
# acccessing specific parts of the vector
v0[2]
v0[1:3]
# can store multiple vectors
df0 <- data.frame(v0, 2*v0, v0/2)
df0
# add and substract
x0 + x0
x0-3
# mult + div
x0*4
x0/4
v0*4
# mult with dataframes
2*df0
# define a 3x3 matrix
mt0 <- as.matrix(df0)
mt0
t(mt0)
x0^2
# vector multiplication
v0 * v0 # element wise
v0 %*% v0 # dot product
v0 %*% t(v0) # vector product
mt0 %*% mt0 # matrix product
sum(1,2,3)
sum(v0)
my_sum <- function(vector){
# sum the first and last entry of a vector
x <- vector[1] + vector[length(vector)]
return(x)
}
my_sum(v0)
my_sum(c())
library(tidyverse)
library(knitr)
library(readr)
# need to set where we get our data from
setwd("~/Documents/GitHub/COVID-19/csse_covid_19_data/csse_covid_19_time_series")
# many ways to
covid_global <- read_csv("time_series_covid19_confirmed_global.csv")
covid_US <- read_csv("time_series_covid19_confirmed_US.csv")
head(covid_global)
glimpse(covid_US)
infected_data_tidy <- covid_US %>%
gather(date_stamp, num_infect,'1/22/20':'4/15/20') %>%
rename(Province = `Province_State`, Country = `Country_Region`) %>%
select(Country, Province, Admin2, date_stamp, num_infect) %>%
group_by(Province)
# change strings to dates
infected_data_tidy$date_stamp <- lubridate::mdy(infected_data_tidy$date_stamp)
# we want to aggregate data on a global scale for summary purposes
infected_summary <- infected_data_tidy %>%
group_by(date_stamp) %>%
summarise(total = sum(num_infect))
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "US Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
infected_data_tidy
infected_data_tidy <- covid_US %>%
gather(date_stamp, num_infect,'1/22/20':'4/15/20') %>%
rename(Province = `Province_State`, Country = `Country_Region`, City = `City`) %>%
select(Country, Province, date_stamp, num_infect) %>%
group_by(Province)
infected_data_tidy <- covid_US %>%
gather(date_stamp, num_infect,'1/22/20':'4/15/20') %>%
rename(Province = `Province_State`, Country = `Country_Region`, City = `Admin2`) %>%
select(Country, Province, date_stamp, num_infect) %>%
group_by(Province)
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "US Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
infected_data_tidy %>% group_by(Province)
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = Province, y = total_infect)) + geom_bar(stat = 'identity')
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = Province, y = total_infect)) +
geom_bar(stat = 'identity') +
theme_minimal(axis.text.x = element_text(angle = 45))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = Province, y = total_infect)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 45))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 45))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, total_infect), y = total_infect)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 45))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 45))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle = 45)) + theme_minimal()
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
theme(axis.text.x = element_text(angle = 45)) + theme_minimal()
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
theme(axis.text.x = element_text(angle = 45)) + theme_minimal()
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
theme(axis.text.x = element_text(angle = 45))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
labs(x = 'State') +
theme(axis.text.x = element_text(angle = 45))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
labs(title = 'Total Covid Cases',
x = 'State',
y = 'Confirmed Cases') +
theme(axis.text.x = element_text(angle = 45))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
labs(title = 'Total Covid Cases',
x = 'State',
y = 'Confirmed Cases') +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45))
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
top_n(10) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
labs(title = 'Total Covid Cases',
x = 'State',
y = 'Confirmed Cases') +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45))
infected_data_tidy <- covid_US %>%
gather(date_stamp, num_infect,'1/22/20':'10/15/20') %>%
rename(Province = `Province_State`, Country = `Country_Region`, City = `Admin2`) %>%
select(Country, Province, date_stamp, num_infect) %>%
group_by(Province)
# change strings to dates
infected_data_tidy$date_stamp <- lubridate::mdy(infected_data_tidy$date_stamp)
# we want to aggregate data on a global scale for summary purposes
infected_summary <- infected_data_tidy %>%
group_by(date_stamp) %>%
summarise(total = sum(num_infect))
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "US Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
top_n(10) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
labs(title = 'Total Covid Cases',
x = 'State',
y = 'Confirmed Cases') +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45))
colnames(covid_NY)
infected_data_tidy <- covid_US %>%
gather(date_stamp, num_infect,'1/22/20':'11/28/20') %>%
rename(Province = `Province_State`, Country = `Country_Region`, City = `Admin2`) %>%
select(Country, Province, date_stamp, num_infect) %>%
group_by(Province)
# change strings to dates
infected_data_tidy$date_stamp <- lubridate::mdy(infected_data_tidy$date_stamp)
# we want to aggregate data on a global scale for summary purposes
infected_summary <- infected_data_tidy %>%
group_by(date_stamp) %>%
summarise(total = sum(num_infect))
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "US Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
head(covid_global)
# need to set where we get our data from -CHANGE THIS FOR YOUR COMPUTER
setwd("~/Documents/GitHub/R-Workshop-for_STEM/2021")
# need to set where we get our data from -CHANGE THIS FOR YOUR COMPUTER
setwd("~/Documents/GitHub/R-Workshop-for-STEM/2021")
# many ways to import data
covid_global <- read_csv("time_series_covid19_confirmed_global.csv")
covid_US <- read_csv("time_series_covid19_confirmed_US.csv")
head(covid_US)
x0 <- 42
class(x0)
# can store multiple values in the same memory slot
v0 <- c(41, x0, 43)
v0
# acccessing specific parts of the vector
v0[2]
v0[1:3]
# can store multiple vectors
df0 <- data.frame(v0, 2*v0, v0/2)
df0
# add and substract
x0 + x0
x0-3
# mult + div
x0*4
x0/4
v0*4
# mult with dataframes
2*df0
# define a 3x3 matrix
mt0 <- as.matrix(df0)
mt0
t(mt0)
x0^2
# vector multiplication
v0 * v0 # element wise
v0 %*% v0 # dot product
v0 %*% t(v0) # vector product
mt0 %*% mt0 # matrix product
sum(1,2,3)
sum(v0)
my_sum <- function(vector){
# sum the first and last entry of a vector
x <- vector[1] + vector[length(vector)]
return(x)
}
my_sum(v0)
my_sum(c())
library(tidyverse)
library(knitr)
library(scales)
# need to set where we get our data from -CHANGE THIS FOR YOUR COMPUTER
setwd("~/Documents/GitHub/R-Workshop-for-STEM/2021")
# many ways to import data
covid_global <- read_csv("time_series_covid19_confirmed_global.csv")
covid_US <- read_csv("time_series_covid19_confirmed_US.csv")
head(covid_US)
# change strings to dates
# infected_data_tidy$date_stamp <- lubridate::mdy(infected_data_tidy$date_stamp)
infected_data_tidy <- covid_US %>%
gather(date_stamp, num_infect,'1/22/20':'11/28/20') %>%
rename(Province = `Province_State`, Country = `Country_Region`, City = `Admin2`) %>%
select(Country, Province, date_stamp, num_infect) %>%
group_by(Province)
# we want to aggregate data on a global scale for summary purposes
infected_summary <- infected_data_tidy %>%
group_by(date_stamp) %>%
summarise(total = sum(num_infect))
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "US Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
top_n(10) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
labs(title = 'Total Covid Cases',
x = 'State',
y = 'Confirmed Cases') +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45))
# change strings to dates
infected_data_tidy$date_stamp <- lubridate::mdy(infected_data_tidy$date_stamp)
# we want to aggregate data on a global scale for summary purposes
infected_summary <- infected_data_tidy %>%
group_by(date_stamp) %>%
summarise(total = sum(num_infect))
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "US Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
infected_data_tidy %>%
group_by(Province) %>%
summarise(total_infect = sum(num_infect)) %>%
arrange(desc(total_infect)) %>%
top_n(10) %>%
ggplot(aes(x = reorder(Province, -total_infect), y = total_infect)) +
geom_bar(stat = 'identity', fill = 'royalblue') +
labs(title = 'Total Covid Cases',
x = 'State',
y = 'Confirmed Cases') +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45))
# we want to aggregate data on a country scale for summary purposes
infected_summary <- infected_data_tidy %>%
group_by(date_stamp) %>%
summarise(total = sum(num_infect))
infected_summary
infected_summary %>% ggplot(aes(x = date_stamp, y = total)) +
geom_step(colour = 'red')+
scale_y_continuous(labels = comma) +
labs(title = "US Totals for Covid-19",
x = "Date",
y = "Totals") +
theme_light()
# we want to aggregate data on a country scale for summary purposes
infected_summary <- infected_data_tidy %>%
group_by(date_stamp) %>%
summarise(total = sum(num_infect))
tail(infected_summary)
infected_data_tidy %>%
group_by(date_stamp) %>%
summarise(Max_infected = max(num_infect))
infected_data_tidy %>%
summarise(Max_infected = max(num_infect))
infected_data_tidy
infected_data_tidy %>% max(num_infect)
infected_data_tidy %>%
group_by(date_stamp) %>%
summarise(Max_infected = max(num_infect))
infected_data_tidy
max(infected_data_tidy$num_infect)
